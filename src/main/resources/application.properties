spring.application.name=PrjJpa02

# server port number
server.port=9090

# server encoding utf-8 , 한글 utf-8 로 강제 인코딩
# force : IT 업계에선 강제 의미
server.servlet.encoding.force=true 

# h2 database web으로 확인
# springboot(프로젝트) 와 h2 db 연결 / http://localhost:9090/h2-console 작동하도록
spring.h2.console.enabled=true
# script 파일이 hibernate 초기화 이후 동작하게 하기 위한 옵션
# src/main/resources/data.sql 을 기초데이터로 사용하겠다(springboot 2.5 부터 비추)
spring.jpa.defer-datasource-initialization=true
#spring.sql.init.mode=always
# ↑ PrjJpa03 끝나고 오픈

# JPA 로깅 설정
# 디버그 레벨로 쿼리 출력
logging.level.org.hibernate.SQL=DEBUG

# 매개변수 값 보여 주기(? 값의 type 을 다음줄에 출력)
logging.level.org.hibernate.orm.jdbc.bind=trace

# 쿼리 줄바꿈하기
spring.jpa.properties.hibernate.format_sql=true

# H2 DB 고정 URL 설정
# 유니크 URL 생성하지 않기
spring.datasource.generate-unique-name=false

###---------------------------------------------------------

# in-memory 고정 URL 설정하기
#spring.datasource.url=jdbc:h2:mem:testdb

# embeded mode c:\dev\projec01\data\testdb.mv.db 생성됨
#spring.datasource.url=jdbc:h2:./data/testdb
spring.h2.console.path=/h2-console
# ↑ PrjJpa03 끝나고 주석 # 처리
spring.datasource.url=jdbc:h2:~/testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=
spring.datasource.password=
# 엔티티를 기준으로 테이블을 생성하는 규칙을 정의
# create - 테이블 새로 만들어짐
# update - 테이블 없으면 만들고, 있으면 그냥 사용한다
spring.jpa.hibernate.ddl-auto=update 
# 데이터베이스 엔진 종류 설정(추가하면 에러남)
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect 


